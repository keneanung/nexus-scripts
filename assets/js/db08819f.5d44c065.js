"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[354],{3905:(e,a,n)=>{n.d(a,{Zo:()=>g,kt:()=>u});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=t.createContext({}),c=function(e){var a=t.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):p(p({},a),e)),n},g=function(e){var a=c(e.components);return t.createElement(o.Provider,{value:a},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},k=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),s=c(n),k=r,u=s["".concat(o,".").concat(k)]||s[k]||d[k]||i;return n?t.createElement(u,p(p({ref:a},g),{},{components:n})):t.createElement(u,p({ref:a},g))}));function u(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,p=new Array(i);p[0]=k;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l[s]="string"==typeof e?e:r,p[1]=l;for(var c=2;c<i;c++)p[c]=n[c];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4513:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(3117),r=(n(7294),n(3905));const i={},p="API",l={unversionedId:"package-manager/api",id:"package-manager/api",title:"API",description:"The package manager includes a public API which can be used to interact with it.",source:"@site/docs/package-manager/api.md",sourceDirName:"package-manager",slug:"/package-manager/api",permalink:"/nexus-scripts/docs/package-manager/api",draft:!1,editUrl:"https://github.com/keneanung/nexus-scripts/edit/development/website/docs/package-manager/api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"intro",permalink:"/nexus-scripts/docs/intro"}},o={},c=[{value:"<code>packageManager.updateAsync</code>",id:"packagemanagerupdateasync",level:2},{value:"<code>packageManager.getRepositoryData</code>",id:"packagemanagergetrepositorydata",level:2},{value:"<code>packageManager.install</code>",id:"packagemanagerinstall",level:2},{value:"<code>packagemanager.uninstall</code>",id:"packagemanageruninstall",level:2},{value:"<code>packageManager.isInstalled</code>",id:"packagemanagerisinstalled",level:2},{value:"<code>packageManager.onUpdateFinished</code>",id:"packagemanageronupdatefinished",level:2},{value:"<code>packageManager.onPackageOperationDone</code>",id:"packagemanageronpackageoperationdone",level:2}],g={toc:c},s="wrapper";function d(e){let{components:a,...n}=e;return(0,r.kt)(s,(0,t.Z)({},g,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api"},"API"),(0,r.kt)("p",null,"The package manager includes a public API which can be used to interact with it."),(0,r.kt)("h2",{id:"packagemanagerupdateasync"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.updateAsync")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.updateAsync(): Promise<void>")),(0,r.kt)("p",null,"Updates the package listing of available packages."),(0,r.kt)("h2",{id:"packagemanagergetrepositorydata"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.getRepositoryData")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.getRepositoryData(): PackageEntry[]")),(0,r.kt)("p",null,"Returns the cached data of available packages."),(0,r.kt)("h2",{id:"packagemanagerinstall"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.install")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.installAsync(name: string): Promise<void>")),(0,r.kt)("p",null,"Installs a package with the given package name. Throws an exception if the package name is not know."),(0,r.kt)("h2",{id:"packagemanageruninstall"},(0,r.kt)("inlineCode",{parentName:"h2"},"packagemanager.uninstall")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.uninstall(name: string): void")),(0,r.kt)("p",null,"Uninstalls a package with the given package name."),(0,r.kt)("h2",{id:"packagemanagerisinstalled"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.isInstalled")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.isInstalled(name: string): boolean")),(0,r.kt)("p",null,"Returns whether a package is installed or not. This also returns packages with the same name that were not installed by the package manager."),(0,r.kt)("h2",{id:"packagemanageronupdatefinished"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.onUpdateFinished")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.onUpdateFinished(callback: (data: PackageEntry[]) => void)): void")),(0,r.kt)("p",null,"Registers a callback function that will be called whenever the update of the package listing data finishes. The callback receives the new data as first argument."),(0,r.kt)("h2",{id:"packagemanageronpackageoperationdone"},(0,r.kt)("inlineCode",{parentName:"h2"},"packageManager.onPackageOperationDone")),(0,r.kt)("p",null,"Signature: ",(0,r.kt)("inlineCode",{parentName:"p"},"packageManager.onPackageOperationDone(callback: (operationName: boolean, packageName: string) => void): void")),(0,r.kt)("p",null,"Registers a callback function that will be called whenever a package operation finishes. These operations can be ",(0,r.kt)("inlineCode",{parentName:"p"},"install"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"uninstall"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"update")," and are given as the first argument. The second argument is the package name, that was modified."))}d.isMDXComponent=!0}}]);