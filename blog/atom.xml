<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://keneanung.github.io/nexus-scripts/blog</id>
    <title>Keneanungs Collection of IRE Nexus scripts Blog</title>
    <updated>2023-08-10T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://keneanung.github.io/nexus-scripts/blog"/>
    <subtitle>Keneanungs Collection of IRE Nexus scripts Blog</subtitle>
    <icon>https://keneanung.github.io/nexus-scripts/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Taking Simplified Scripting to the Next Level]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/08/10/_Simplified_next_level</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/08/10/_Simplified_next_level"/>
        <updated>2023-08-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[There has been a lot of discussion on Simplified Scripting in Nexus 3, especially on the Nexus Discord channel.]]></summary>
        <content type="html"><![CDATA[<p>There has been a lot of discussion on Simplified Scripting in Nexus 3, especially on the Nexus Discord channel.</p><p>On the one hand, simplified scripting is useful for people who are not used to coding. They are not overwhelmed by an empty box and infinite amount of possibilities to do something wrong. Instead, they are presented with a slimmed down list of options that they can use and can fully concentrate on the "what" they want to do and most of the "how" is abstracted away. It gets them in the mindset of algorithmical thinking while not making them think about syntax and formal language.</p><p>But once they want to break outside the box of Simplified Scripting and the limited actions that are supported, some users have already created complex systems. They now need to convert that to traditional JavaScript, which can be a tedious and daunting process. Additionally, they need to learn coding syntax and formal language and look up the Nexus API for the same things they had already made.</p><h2 id="introducing-a-converter">Introducing a Converter</h2><p>Since Simplified Scripting can be understood as an interpreted scripting language of sorts, it can also be converter (or transpiled) into actual JavaScript code.</p><p>While the resulting code is often overly complex (not all information, whether steps like variable expansion are needed, is available at transpilation time), it can serve as a good starting point to learn syntax and explore the Nexus API.</p><p>This release features the first version of a library that can do such conversions. It is not yet feature complete and misses transpilation support for more complex actions that require context (eg Goto, If, Repeat, Label) or rewrite the MUD output. But it is complete enough to convert simpler packages. Additionally, the release unblocks the development of its <a href="https://keneanung.github.io/nssc/">dependent project</a> (see the <a href="https://github.com/keneanung/nssc/">GitHub project</a> as well), a website that allows converting existing packages to a pure script version, compare these versions, and download the results.</p><h2 id="steps-forward">Steps forward</h2><p>I try to bring both the converter library and the NSSC forward in an even pace. However, if you have ideas that can improve either projects, please contact me in the Nexus Discord. I also welcome contributions to all my projects, but especially help in these two of my current focus areas would be greatly appreciated.</p><h2 id="what-else">What else?</h2><p>During the development, I noticed that some of the newer actions were missing from both the typings and the package builder. These projects were extended to include the new possibilities.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="typings" term="typings"/>
        <category label="package-builder" term="package-builder"/>
        <category label="simplified-scripting-converter" term="simplified-scripting-converter"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[What's Your Type?]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/07/17/_Whats_your_type</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/07/17/_Whats_your_type"/>
        <updated>2023-07-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[You have a type]]></summary>
        <content type="html"><![CDATA[<p><img src="https://media1.giphy.com/media/f16wgrNYaKkBcvOu5r/giphy.gif" alt="You have a type"></p><p>Part of what makes TypeScript so enjoyable for me is the ability for IDEs and tooling to check, whether functions, objects and properties you use actually exist.
However, since TypeScript is interoperable with the vast JavaScript ecosystem which doesn't support the type system out of the box, away to add the information is required.
Enter typings. This is a way to declare the typings of a JavaScript object through a number of helper files without adding functionality.</p><p>Since Nexus is written in plain JavaScript and doesn't publish any type information, the subproject <code>@keneanung/iron-realms-nexus-typings</code> was created. It is a ever expanding collection
of typings for the different Nexus APIs and classes it uses.</p><h2 id="the-problem">The Problem</h2><p>Writing the types itself is pretty straightforward since they mostly use standard TypeScript constructs. However, structuring them in a way that is logical and that makes the global
<code>nexusclient</code> object available, is hard 8for me). TypeScript by default supports Module syntaxes only. After some trial and error, I found a way to support both the monorepo usecase of this repository
as well as consuming the types in an external project like <a href="https://keneanung.github.io/nssc/">nssc</a>.</p><h2 id="whats-breaking">What's Breaking?</h2><p>Due to the restructuring, types for the different Nexus objects like Reflexes, Actions and so on now need to be imported like normal classes (eg. <code>import {Reflex} from '@keneanung/irong-realms-nexus-typings'</code>)
instead of using the <code>nexusclient</code> namespace. Functions like <code>ui()</code> or <code>send_commands()</code> on the namespace still work by siply using the namespace without any imports: <code>nexusclient.send_commands()</code>.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="typings" term="typings"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Breaking the UI]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/07/04/_Breaking_the_UI</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/07/04/_Breaking_the_UI"/>
        <updated>2023-07-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Howdy! This release was brought to you by an unforseen change on the Nexus side, which caused external UI tabs to be saved with the settings. That in itself wouldn't be too bad if it didn't mean that critical information that made the tab an UI element was lost. So on restoring these UI elements, the whole UI would crash and all you were left with is a blank screen.]]></summary>
        <content type="html"><![CDATA[<p>Howdy! This release was brought to you by an unforseen change on the Nexus side, which caused external UI tabs to be saved with the settings. That in itself wouldn't be too bad if it didn't mean that critical information that made the tab an UI element was lost. So on restoring these UI elements, the whole UI would crash and all you were left with is a blank screen.</p><p>This release contains a workaround for the issue. Since the UI is already broken for most of you, the workaround I used to keep my packages was to log in via a mobile app (Android in my case, iOS should work as well, but not the browser!), gointo the settings, then <code>Custom Tabs</code> and remove the <code>npkg_ui</code> tab. If you then log into the webbrowser, the package manager should work on the browser and allow you to update the package manager with the workaround.</p><h2 id="additional-changes">Additional Changes</h2><p>Since I was working with the webpack entrypoint anyways, I extended the Nexus typings by a few interfaces and functions to remove eslint and TypeScript magical comments.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="typings" term="typings"/>
        <category label="package-manager" term="package-manager"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Queues!]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/06/26/_Queues</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/06/26/_Queues"/>
        <updated>2023-06-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is the first release of the scripts within the new monorepo structure. For some background about the changes see here. Were're here now to celebrate the release itself!]]></summary>
        <content type="html"><![CDATA[<p>This is the first release of the scripts within the new monorepo structure. For some background about the changes see <a href="/nexus-scripts/blog/2023/06/23/_a_new_home">here</a>. Were're here now to celebrate the release itself! ❤️</p><h2 id="new-script-queue-manager">New Script: Queue Manager</h2><p>The queue manager introduced with this release is meant to make it easier to use the in-game queueing with your scripts. It tracks the queue, allows you to queue client-side commands and tries to integrate as seamlessly as possible with external queue sources.</p><p>This release does not allow for the foll flexibility of the in-game queueing yet (like prepending or adding at certain places in the queue), but it should be enough to vet the implementation. For more details, please refer to <a href="https://keneanung.github.io/nexus-scripts/docs/queue-manager/">the documentation</a>.</p><h2 id="developer-documentation">Developer Documentation</h2><p>Due to the switch to the monorepo structure, I added a lot of additional developer documentation, like READMEs, <a href="https://github.com/keneanung/nexus-scripts/blob/main/CODE_OF_CONDUCT.md">a Code of Conduct</a> and <a href="https://github.com/keneanung/nexus-scripts/blob/main/CONTRIBUTING.md">Contribution Guidelines</a>. Please have a look!</p><h2 id="more-infrastructure-changes">More Infrastructure Changes</h2><p>In addition to the overall layout change of the repository and all linked changes, I also switch from dependabot to <a href="https://www.mend.io/renovate/">renovate</a>. This hopefully further decreases the dependency maintenance burden as dependency upgrades are now bundled together. Currently, this still has some kinks to straighten out, but I'm sure we will get there.</p><h2 id="other-changes">Other Changes</h2><p>Most packages should now export their classes as a global library, which webpack then can use to avoid bundling all the code with yours. This is still untested, so expect further changes in that area.</p><p>Additionally, quite a few of the linter and test rules saw some harmonization, which prompted a few non-code changes to follow best practices.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="typings" term="typings"/>
        <category label="event-bus" term="event-bus"/>
        <category label="package-builder" term="package-builder"/>
        <category label="package-manager" term="package-manager"/>
        <category label="queue-manager" term="queue-manager"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A New Home for my Nexus Repositories]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/06/23/_a_new_home</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/06/23/_a_new_home"/>
        <updated>2023-06-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Man tapping microphone]]></summary>
        <content type="html"><![CDATA[<p><img src="https://media.giphy.com/media/B4xdycvhDq7qM3cdh2/giphy.gif" alt="Man tapping microphone"></p><p>Test, test... Is this thing on? Aehm...</p><p>Since the infrastructure seems to be up and running, it is time to tell you why we moved.</p><h2 id="why-i-combined-multiple-independent-repositories-into-a-monorepo-for-enhanced-script-management">Why I Combined Multiple Independent Repositories into a Monorepo for Enhanced Script Management</h2><p>Today, I want to share my personal journey of merging multiple independent repositories into a monorepo for better script management. It's not about convincing you that monorepos are the holy grail, but rather about sharing why I made this decision and the benefits I experienced. So, let's dive in!</p><h3 id="tired-of-update-chaos">Tired of Update Chaos</h3><p>I used to manage my scripts across different repositories. Every time I needed to make updates or coordinate changes, it felt like a never-ending battle. I spent much time syncing updates between repositories and trying to keep everything in check. It was exhausting, and I knew there had to be a better way.</p><h3 id="simplifying-dependency-nightmares">Simplifying Dependency Nightmares</h3><p>Dependency management was another pain point for me. Dealing with different repositories meant juggling multiple sets of dependencies and version requirements. And when it came to updating dependencies, it felt like a never-ending loop of repetitive tasks. It was time-consuming and frustrating.</p><h3 id="the-call-for-collaboration-and-code-reuse">The Call for Collaboration and Code Reuse</h3><p>As developers, we thrive on collaboration and code reuse. However, with scripts scattered across various repositories, collaboration became a daunting task. Searching for shared code felt like searching for a needle in a haystack. Code duplication crept in, leading to inconsistencies and extra maintenance work. I knew there had to be a way to streamline collaboration and maximize code reuse.</p><h3 id="embracing-the-monorepo-solution">Embracing the Monorepo Solution</h3><p>After much consideration, I decided to take the plunge and combine all my independent repositories into a monorepo. And let me tell you, it was a game-changer!</p><h4 id="harmonious-updates">Harmonious Updates</h4><p>With my scripts residing in a single monorepo, orchestrating updates became a breeze. I no longer had to manually propagate changes between repositories. I could make modifications, run tests, and validate the impact across the entire codebase with ease. Updating became a streamlined process that saved me time and reduced the risk of inconsistencies.</p><h4 id="dependency-bliss">Dependency Bliss</h4><p>The monorepo approach revolutionized my dependency management. By centralizing all scripts, I gained better control over dependencies and versioning. I defined a shared set of dependencies and ensured compatibility across the codebase. Upgrading dependencies became a unified process, eliminating the headache of handling them separately for each repository. It made my life simpler and reduced the chances of version conflicts.</p><h4 id="collaborative-awesomeness">Collaborative Awesomeness</h4><p>Bringing all my scripts together in a monorepo unleashed a new level of collaboration and code reuse. No more jumping between repositories to find the code I needed. It was all there, easily discoverable and accessible. Code duplication became a thing of the past, streamlining maintenance and ensuring consistency across the board.</p><h3 id="conclusion">Conclusion</h3><p>That's my story of why I decided to combine multiple independent repositories into a monorepo for enhanced script management. It was a personal choice born out of the need for simplicity, efficiency, and better collaboration. While the monorepo approach may not be for everyone, it has undoubtedly transformed my development experience. If you're facing similar challenges, I encourage you to explore the monorepo approach and see if it's the right fit for you.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="blog-entry" term="blog-entry"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus Package Manager v0.2.1 & v0.2.2: Bugfix for Disappearing Actions]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/06/05/_disappearing_actions</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/06/05/_disappearing_actions"/>
        <updated>2023-06-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This bugfix release fixes the issue that makes all actions for reflexes (eg calling scripts, coloring lines etc) disappear when installing a package through the package manager.]]></summary>
        <content type="html"><![CDATA[<p>This bugfix release fixes the issue that makes all actions for reflexes (eg calling scripts, coloring lines etc) disappear when installing a package through the package manager.</p><p>Additionally, version 0.2.2 fixes an issue in the website infrastructure.</p><p>I hope nobody lost important changes through this!</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="package-manager" term="package-manager"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus Package Manager v0.2.0: Dependencies]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/04/24/_dependencies</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/04/24/_dependencies"/>
        <updated>2023-04-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I'm happy to announce that the project reached a huge milestone. It now handles dependencies of packages that are listed in package repository.]]></summary>
        <content type="html"><![CDATA[<p>I'm happy to announce that the project reached a huge milestone. It now handles dependencies of packages that are <a href="https://keneanung.github.io/nexus-package-repository/">listed in package repository</a>.</p><h2 id="handling-dependencies">Handling dependencies</h2><p>Whenever the package manager installs a package, it checks, whether it has other packages that are required for it to function correctly. These packages are first searched in the local package list. If they are installed, the package manager proceeds to install the original package as normal. If a dependency is not installed, the package manager will first install the dependency, before proceeding with the actual requested package installation.</p><p>The package manager will also make sure, that dependencies are listed in the correct order. This makes sure that the initialization of a package is only attempted when all dependencies are already initialized. No more documenting "and make sure package A is above package B". This happens both after the installation and update of a package.</p><h2 id="ui-improvements">UI improvements</h2><p>The UI also got some improvements. You can now show package details within the window, including version, description, dependencies and a link to the website.</p><p><img alt="package detail view" src="/nexus-scripts/assets/images/detail_page-78b4a6740a57a19127a3465599fa1e12.png" width="386" height="484"></p><p>The UI main page got some layout imprvements by using icons instead of text for buttons, which makes the page much cleaner.</p><p><img alt="package list view" src="/nexus-scripts/assets/images/package_listing-27e49b83cfa747c79cde724cbe7f48a4.png" width="379" height="481"></p><h2 id="closing-words">Closing words</h2><p>If these features got you interested, please feel free to either <a href="https://github.com/keneanung/nexus-package-repository/issues/new?assignees=&amp;labels=new+package&amp;template=new_package.yml&amp;title=%5BPackage%5D%3A+">open an issue about including your package</a> in the package listing or contact me on the Achaea or Nexus discrod if you need more information. You can also send me a direct message.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="package-manager" term="package-manager"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus EventBus v0.5.0 + v0.5.1: Packaging improvements]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2023/01/02/_Packaging</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2023/01/02/_Packaging"/>
        <updated>2023-01-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release does not contain any changes to the code of the event bus itself. Rather, it facilitates improvements to the packaging, adding version and website information directly into the package.]]></summary>
        <content type="html"><![CDATA[<p>This release does not contain any changes to the code of the event bus itself. Rather, it facilitates improvements to the packaging, adding version and website information directly into the package.</p><p>Additionally, dependencies were updated.</p><p>Version 0.5.1 contained infrastructure fixes only.</p><p>If you find bugs, would like to see more features and discuss particular design choices, feel free to <a href="https://github.com/keneanung/nexus-scripts/issues/new">create a new issue</a> to get in touch.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="event-bus" term="event-bus"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus Package Manager v0.1.0: MVP]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2022/10/23/_mvp</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2022/10/23/_mvp"/>
        <updated>2022-10-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This is the very first release of the Nexus Package Manager. This MVP (Minimal Viable Product), which contains only a bare minimum of features. These include a basic UI, the retrieval of package data from a remote location as well as installation, update and removal of packages. All of this functionality is also provided by the Nexus UI, with the exception of a package listing. So right now it can be used as a way to discover new packages.]]></summary>
        <content type="html"><![CDATA[<p>This is the very first release of the Nexus Package Manager. This MVP (Minimal Viable Product), which contains only a bare minimum of features. These include a basic UI, the retrieval of package data from a remote location as well as installation, update and removal of packages. All of this functionality is also provided by the Nexus UI, with the exception of a package listing. So right now it can be used as a way to discover new packages.</p><p>Future plans include the tracking and installation of dependencies, version handling and notification of new updates for installed packages.</p><p>The success of this project is strongly linked with how extensive the <a href="https://keneanung.github.io/nexus-package-repository/">list of available packages</a> is. So, if you know of a package or have authored one yourself, please head over to <a href="https://github.com/keneanung/nexus-package-repository">https://github.com/keneanung/nexus-package-repository</a> and either add the package via pull request or open an issue so I can add it.</p><h2 id="v011-infrastructure-fix">v0.1.1 Infrastructure fix</h2><p>This version bump was only for infrastructure fixes. The package was not modified.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="package-manager" term="package-manager"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus EventBus v0.3.0: Finetuning]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2022/05/11/_Finetuning</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2022/05/11/_Finetuning"/>
        <updated>2022-05-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release contains a number of small bits and bops here and there to finetune the package and give it some extra shine:]]></summary>
        <content type="html"><![CDATA[<p>This release contains a number of small bits and bops here and there to finetune the package and give it some extra shine:</p><ul><li>Fix a possible security issue due to <a href="https://portswigger.net/daily-swig/prototype-pollution-the-dangerous-and-underrated-vulnerability-impacting-javascript-applications">prototype polution</a></li><li>Inject version number into loading log message</li><li>Add hack to get the Map class back</li><li>Move raising specialized gmcp events to the NXS package for improved visibility and document them</li></ul><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="event-bus" term="event-bus"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Nexus EventBus v0.1.1: Khaseems Wishlist]]></title>
        <id>https://keneanung.github.io/nexus-scripts/blog/2022/04/27/_Khaseems_Wishlist</id>
        <link href="https://keneanung.github.io/nexus-scripts/blog/2022/04/27/_Khaseems_Wishlist"/>
        <updated>2022-04-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This release is something, the Achaean Player Khaseem wished for. He's been using the original EventStream module of NexSys very extenively. However, he'd like to move to an external package to help the adoption of a standard set of Nexus packages.]]></summary>
        <content type="html"><![CDATA[<p>This release is something, the Achaean Player Khaseem wished for. He's been using the original EventStream module of NexSys very extenively. However, he'd like to move to an external package to help the adoption of a standard set of Nexus packages.</p><p>The original EventStream had a set of features that were part of his development flow: The ability to unsubscribe from events using a function name and access to the list of subscribers to an event.</p><p>While the former is about a preferred coding style, the latter is useful for debugging code: That way you can easily have a look at the list of subscribers to an event and determine if all subscribers actually belong there at this point.</p><h2 id="new-features">New Features</h2><p>You may now subscribe or unsubscribe to events using a callback function name instead of a function reference. To avoid accidental overwriting of existing callbacks, especially between different users of the EventBus, duplicate subscription names generate an error. So you may want to namespace your event names.</p><p>You can now access the list of subscribers to an event using the <code>getSubscribers</code> method. This allows easy inspection of the subscription state of callbacks. The subscribers may not be changed this way.</p><p>If you like the project, please consider leaving a star on the <a href="https://github.com/keneanung/nexus-scripts">GitHub project</a> and <a href="https://github.com/sponsors/keneanung">sponsoring me</a>.</p>]]></content>
        <author>
            <name>keneanung</name>
            <email>keneanung@gmail.com</email>
            <uri>https://github.com/keneanung</uri>
        </author>
        <category label="event-bus" term="event-bus"/>
        <category label="release-notes" term="release-notes"/>
    </entry>
</feed>