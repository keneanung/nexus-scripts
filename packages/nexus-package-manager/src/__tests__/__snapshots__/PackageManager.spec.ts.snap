// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should ask the Nexus client to uninstall and then install a new version of a package with a given name on update of package 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "description": "bar",
        "name": "foo",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should have installed package after call to install 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "description": "bar",
        "name": "foo",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should install depency packages with original package 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "description": "bar",
        "name": "first",
      },
    ],
    [
      {
        "dependencies": [
          "first",
        ],
        "description": "baz",
        "name": "second",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should log an exception about circular dependencies on updating order 1`] = `
[MockFunction] {
  "calls": [
    [
      "Error running package operation callback function",
      [Error: Circular dependency found: first -> second],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should log an exception about unknown dependencies on updating order 1`] = `
[MockFunction] {
  "calls": [
    [
      "Error running package operation callback function",
      [Error: Unable to satisfy dependency third of package first],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should not throw on error in callback function for install. 1`] = `
[MockFunction] {
  "calls": [
    [
      "Error running package operation callback function",
      [Error],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should not throw on error in callback function for update. 1`] = `
[MockFunction] {
  "calls": [
    [
      "Error running update callback function",
      [Error],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should order installed depency packages after update and accept unkown package 1`] = `
[MockFunction] {
  "calls": [
    [
      [
        ReflexHelper {
          "apply": [Function],
          "description": "baz",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "second",
          "type": "group",
        },
        ReflexHelper {
          "apply": [Function],
          "description": "bar",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "first",
          "type": "group",
        },
      ],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should order installed depency packages after update to have dependency before both dependent packages 1`] = `
[MockFunction] {
  "calls": [
    [
      [
        ReflexHelper {
          "apply": [Function],
          "description": "bar",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "first",
          "type": "group",
        },
        ReflexHelper {
          "apply": [Function],
          "description": "baz",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "second",
          "type": "group",
        },
        ReflexHelper {
          "apply": [Function],
          "description": "bamboozle",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "third",
          "type": "group",
        },
      ],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should order installed depency packages after update to have dependency before dependent package 1`] = `
[MockFunction] {
  "calls": [
    [
      [
        ReflexHelper {
          "apply": [Function],
          "description": "bar",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "first",
          "type": "group",
        },
        ReflexHelper {
          "apply": [Function],
          "description": "baz",
          "duplicate": [Function],
          "enabled": true,
          "encode": [Function],
          "id": 1,
          "items": [],
          "name": "second",
          "type": "group",
        },
      ],
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`Should parse response correctly 1`] = `
[
  {
    "dependencies": [],
    "description": "Event Bus similar to the Nexus function system, but available outside of the GUI",
    "name": "Event Bus",
    "packageName": "eventbus",
    "url": "https://keneanung.github.io/nexus-event-bus/EventBus.nxs",
  },
]
`;

exports[`Should update correctly if called consecutely 1`] = `
[
  {
    "dependencies": [
      "secondFoo",
    ],
    "description": "This is the second response",
    "name": "second response",
    "packageName": "second",
    "url": "https://keneanung.github.io/nexus-event-bus/second.nxs",
  },
]
`;

exports[`Should use installed depency packages with original package 1`] = `
[MockFunction] {
  "calls": [
    [
      {
        "dependencies": [
          "first",
        ],
        "description": "baz",
        "name": "second",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;
